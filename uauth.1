.\" Automatically generated by Pandoc 2.1.1
.\"
.TH "uauth" "1" "" "" ""
.hy
.SH NAME
.PP
uauth \- A Go library and small program for oauth debugging.
.SH SYNOPSIS
.nf
\f[C]
uauth\ [\-fp]

import\ "github.com/harkaitz/go\-uauth"
\f[]
.fi
.SH DESCRIPTION
.PP
Authenticate users using Google Oauth.
This library is intended for web service creation.
.PP
The idea is to use the \[lq]User\[rq] type on the libraries you create,
and to use the â€œCLI*" family of functions and the \[lq]uauth\[rq]
command line utility for testing.
.SH CONFIGURATION FILE
.PP
To configure the library use \[lq]uauth.LoadSettings\[rq].
It expects the following arguments.
.IP
.nf
\f[C]
{
\ \ \ \ "UseHTTPS":\ false,\ \ \ \ \ \ \ \ \ \ //\ Required\ false\ for\ the\ CLI.
\ \ \ \ "Domain":\ "127.0.0.1:8080",\ //\ Required\ "127.0.0.1:8080"\ for\ the\ CLI.
\ \ \ \ "GoogleClientID":\ "...",
\ \ \ \ "GoogleClientSecret":\ "...",
\ \ \ \ "GoogleCallbackPage":\ "/oauthcb/google",
\ \ \ \ "RandomString":\ "<random\-string"
}
\f[]
.fi
.SH COMMAND LINE UTILITY (DO NOT USE IN PRODUCTION)
.PP
It binds to \[lq]127.0.0.1:8080\[rq] and opens a web browser for
authentication.
.PP
This of course requires the programmer to configure the oauth service to
allow \[lq]127.0.0.1:8080\[rq] domain.
.PP
The configuration is readen from \[lq]~/.config.testing.json\[lq]. The
info of the logged user is saved in\[rq]~/.uauth.json\[rq].
.PP
With \[lq]\-f\[rq] the authentication happens always.
With \[lq]\-p\[rq] the resulting JSON is printed to the standard output.
.SH SEE ALSO
.PP
\f[B]JQ(1)\f[]
